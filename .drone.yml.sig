eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgIyBGZXRjaCBmb2xkZXJzIGZyb20gZGlzdHJpYnV0ZWQgY2FjaGUKICBzZnRwX2NhY2hlX3Jlc3RvcmU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlCiAgICByZXN0b3JlOiB0cnVlCiAgICBtb3VudDoKICAgICAgLSAvZHJvbmUvLml2eTIKICAgICAgLSAvZHJvbmUvLmNvdXJzaWVyLWNhY2hlCiAgICAgIC0gL2Ryb25lLy5zYnQKICAgICAgLSAvZHJvbmUvLmdpdAoKICB0ZXN0czoKICAgIGltYWdlOiBzY2FsYXBsYXRmb3JtL3NjYWxhOjAuNQogICAgcHVsbDogdHJ1ZQogICAgY29tbWFuZHM6CiAgICAgIC0gZ2l0IGZldGNoIC0tdGFncyAmJiBnaXQgbG9nIHwgaGVhZCAtbiAyMAogICAgICAtIC4vYmluL2NoZWNrQ0xBLnNoCiAgICAgIC0gLi9iaW4vc2NhbGFmbXQgLS10ZXN0CiAgICAgIC0gc2J0ICRURVNUCgogIHB1Ymxpc2g6CiAgICBpbWFnZTogc2NhbGFwbGF0Zm9ybS9zY2FsYTowLjUKICAgIGVudmlyb25tZW50OgogICAgICAtIFNPTkFUWVBFX1VTRVJOQU1FPSQkU09OQVRZUEVfVVNFUk5BTUUKICAgICAgLSBTT05BVFlQRV9QQVNTV09SRD0kJFNPTkFUWVBFX1BBU1NXT1JECiAgICAgIC0gR0lUSFVCX1VTRVJOQU1FPSQkR0lUSFVCX1VTRVJOQU1FCiAgICAgIC0gR0lUSFVCX1BBU1NXT1JEPSQkR0lUSFVCX1BBU1NXT1JECiAgICAgIC0gQklOVFJBWV9VU0VSTkFNRT0kJEJJTlRSQVlfVVNFUk5BTUUKICAgICAgLSBCSU5UUkFZX0FQSV9LRVk9JCRCSU5UUkFZX0FQSV9LRVkKICAgICAgLSBNQUlMR1VOX1BBU1NXT1JEPSQkTUFJTEdVTl9QQVNTV09SRAogICAgY29tbWFuZHM6CiAgICAgIC0gLi9iaW4vYmludHJheS5zaAogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKICAgICAgYnJhbmNoOiBbbWFzdGVyLCAyLnhdCgogICMgU2F2ZSBmb2xkZXJzIGluIGRpc3RyaWJ1dGVkIGNhY2hlCiAgc2Z0cF9jYWNoZV9yZWJ1aWxkOgogICAgaW1hZ2U6IHBsdWdpbnMvc2Z0cC1jYWNoZQogICAgcmVidWlsZDogdHJ1ZQogICAgbW91bnQ6CiAgICAgIC0gL2Ryb25lLy5pdnkyCiAgICAgIC0gL2Ryb25lLy5jb3Vyc2llci1jYWNoZQogICAgICAtIC9kcm9uZS8uc2J0CiAgICAgIC0gL2Ryb25lLy5naXQKCm1hdHJpeDoKICBURVNUOgogICAgLSBjaS1mYXN0CiAgICAtIGNpLXNsb3cKCg.HKTneplKo15p-Q4auO1cdh-rvuOZ6dTwzmkPMh-VkKQ